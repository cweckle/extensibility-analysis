function num = numberOfBlobs(rgbImage)
%[rgbImage, ~] = imread(vidFrame);
[BW,maskedRGBImage] = createMask(rgbImage);

% Get rid of small objects.  Note: bwareaopen returns a logical.
smallestAcceptableArea = 100;
BW = uint8(bwareaopen(BW, smallestAcceptableArea));

% Smooth the border using a morphological closing operation, imclose().
structuringElement = strel('disk', 20);
BW = imclose(BW, structuringElement);

% Fill in any holes in the regions, since they are most likely red also.
BW = uint8(imfill(BW, 'holes'));

% We need to convert the type of redObjectsMask to the same data type as redBand.
BW = cast(BW, class(maskedRGBImage));

[~, num] = bwlabel(BW, 8);
end

function [BW,maskedRGBImage] = createMask(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 07-Jul-2020
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2lab(RGB);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.525;
channel1Max = 100.000;

% Define thresholds for channel 2 based on histogram settings
channel2Min = 25.743;
channel2Max = 54.463;

% Define thresholds for channel 3 based on histogram settings
channel3Min = -16.032;
channel3Max = 48.941;

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

end